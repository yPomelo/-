/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lzhomework;

import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Enumeration;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import java.awt.Component;
import java.awt.EventQueue;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.Properties;
import java.util.Vector;
import java.util.HashMap; 
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author yyy
 */
public class Order extends javax.swing.JFrame {

    /**
     * Creates new form Order
     */
    private final static String PROP_FILE = "mysql.ini";
    private static String driver;
    private static String url;
    private static String user;
    private static String pass;
    private static Connection conn;
    private static Statement stmt;
     HashMap m = new HashMap();
    
    static {
        // �������ݿ�
        try {
            Properties connProp = new Properties();
            connProp.load(new FileInputStream(PROP_FILE));
            driver = connProp.getProperty("driver");
            url = connProp.getProperty("url");
            user = connProp.getProperty("user");
            pass = connProp.getProperty("pass");
            Class.forName(driver);
            conn = DriverManager.getConnection(url, user, pass);
            stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public Order() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("查看所有商品");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("查看缺货商品");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("生成订单");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("订单详细信息");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("添加商品");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("删除商品");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("订单信息修改");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "小红", "小丽" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton4.setText("查看所有订单");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton9.setText("返回");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addGap(31, 31, 31)
                .addComponent(jButton4)
                .addGap(29, 29, 29)
                .addComponent(jButton3)
                .addGap(47, 47, 47)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jButton5)
                .addGap(44, 44, 44)
                .addComponent(jButton6)
                .addGap(44, 44, 44)
                .addComponent(jButton7)
                .addGap(44, 44, 44)
                .addComponent(jButton8)
                .addGap(30, 30, 30)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        gettable("SELECT * FROM lzhomework.product_table");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String sql = "SELECT * FROM lzhomework.product_table where 商品库存 <= 10";
	gettable(sql);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        CreatOrdering();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        information() ;
	
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        gettable("SELECT 订单编号,lzhomework.ordering_table_supplier.供应商编号,供应商名,lzhomework.ordering_table_supplier.职工号,职工姓名,下单时间,订单审核时间,是否审核,审核意见,是否通过  \r\n" + 
						"FROM lzhomework.ordering_table_supplier,lzhomework.supplier_table,lzhomework.employee_table\r\n" + 
						"where lzhomework.supplier_table.供应商编号 = lzhomework.ordering_table_supplier.供应商编号 \r\n" + 
						"and lzhomework.employee_table.职工号 = lzhomework.ordering_table_supplier.职工号;");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int[] row = jTable2.getSelectedRows();
				if (row[0] == -1)
				{
					JOptionPane.showMessageDialog(this, "请选择要删除的行!");
				}
				else
				{
					String sql = "DELETE FROM `lzhomework`.`ordering_table_product` WHERE `订单编号`='"+ (String) jTable2.getValueAt(row[0], 0) +"' and`商品编号`='"+ (String) jTable2.getValueAt(row[0], 1) +"'" ;
					System.out.println(sql);
					try
					{
						stmt.executeUpdate(sql);
						JOptionPane.showMessageDialog(this, "删除成功！!");
					}
					catch (SQLException e1)
					{
						// TODO 自动生成的 catch 块

						JOptionPane.showMessageDialog(this, "删除失败!\n" + e1.getMessage());
					}
				}
                                information();
				
				
//				gettable("SELECT lzhomework.ordering_table_product.订单编号,lzhomework.ordering_table_supplier.供应商编号,供应商名,lzhomework.ordering_table_product.商品编号,商品名称,职工号,下单时间,订货数量 \r\n" + 
//						"FROM lzhomework.ordering_table_product,lzhomework.ordering_table_supplier,lzhomework.product_table,lzhomework.supplier_table \r\n" + 
//						"where lzhomework.ordering_table_product.订单编号 = lzhomework.ordering_table_supplier.订单编号\r\n" + 
//						"and lzhomework.ordering_table_product.商品编号 = lzhomework.product_table.商品编号\r\n" + 
//						"and lzhomework.ordering_table_supplier.供应商编号 = lzhomework.supplier_table.供应商编号 "
//						+ "and lzhomework.ordering_table_product.订单编号 = '"+primkey+"'");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Update();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        Add a = new Add((String)jTable1.getValueAt(row, 0));
        a.main(null);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Prochaser login = new Prochaser();
				login.main(null);
				this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order().setVisible(true);
            }
        });
    }
    public void gettable(String sql) {
        try (ResultSet rs = stmt.executeQuery(sql)) {
            // 取出ResultSet的MetaData
            ResultSetMetaData rsmd = rs.getMetaData();
            Vector<String> columnNames = new Vector<>();
            Vector<Vector<String>> data = new Vector<>();
            // 把ResultSet的所有列名添加到Vector里
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                columnNames.add(rsmd.getColumnName(i + 1));
            }
            // 把ResultSet的所有记录添加到Vector里
            while (rs.next()) {
                Vector<String> v = new Vector<>();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    v.add(rs.getString(i + 1));
                }
                data.add(v);
            }
            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            jTable1.setModel(model);
            jTable1.setAutoResizeMode(0);
            jTable1.repaint();
            jTable1.updateUI();
            FitTableColumns(jTable1);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("gettable");
        }
    }

     public void gettable2(String sql) {
        try (ResultSet rs = stmt.executeQuery(sql)) {
            // 取出ResultSet的MetaData
            ResultSetMetaData rsmd = rs.getMetaData();
            Vector<String> columnNames = new Vector<>();
            Vector<Vector<String>> data = new Vector<>();
            // 把ResultSet的所有列名添加到Vector里
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                columnNames.add(rsmd.getColumnName(i + 1));
            }
            // 把ResultSet的所有记录添加到Vector里
            while (rs.next()) {
                Vector<String> v = new Vector<>();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    v.add(rs.getString(i + 1));
                }
                data.add(v);
            }
            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            jTable2.setModel(model);
            //jTable2.setAutoResizeMode(0);
            jTable2.repaint();
            jTable2.updateUI();
           // FitTableColumns(jTable2);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("gettable2");
        }
    }
    public void FitTableColumns(JTable myTable) {
        JTableHeader header = myTable.getTableHeader();
        int rowCount = myTable.getRowCount();

        Enumeration columns = myTable.getColumnModel().getColumns();
        while (columns.hasMoreElements()) {
            TableColumn column = (TableColumn) columns.nextElement();
            int col = header.getColumnModel().getColumnIndex(column.getIdentifier());
            int width = (int) myTable.getTableHeader().getDefaultRenderer()
                    .getTableCellRendererComponent(myTable, column.getIdentifier(),
                             false, false, -1, col).getPreferredSize().getWidth();
            for (int row = 0; row < rowCount; row++) {
                int preferedWidth = (int) myTable.getCellRenderer(row, col).getTableCellRendererComponent(myTable,
                        myTable.getValueAt(row, col), false, false, row, col).getPreferredSize().getWidth();
                width = Math.max(width, preferedWidth);
            }
            header.setResizingColumn(column); // 此行很重要
            column.setWidth(width + myTable.getIntercellSpacing().width);
        }
    }
    public void CreatOrdering()
	{
                m.put("小红","01");
                m.put("小丽","02");
		SimpleDateFormat tempDate = new SimpleDateFormat("yyyyMMddHHmmss");
		String Order = tempDate.format(new java.util.Date());
		SimpleDateFormat tempDate2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String OrderTime = tempDate2.format(new java.util.Date());
		System.out.println(Order);
		String sql = "select distinct  供应商编号  from lzhomework.product_table where 商品库存 <= 10";
		try (ResultSet rs = stmt.executeQuery(sql))
		{
			// 取出ResultSet的MetaData
			ResultSetMetaData rsmd = rs.getMetaData();
			Vector<String> columnNames = new Vector<>();
			Vector<Vector<String>> data = new Vector<>();
			// 把ResultSet的所有列名添加到Vector里
			for (int i = 0; i < rsmd.getColumnCount(); i++)
			{
				columnNames.add(rsmd.getColumnName(i + 1));
			}
			// 把ResultSet的所有记录添加到Vector里
			while (rs.next())
			{
				Vector<String> v = new Vector<>();
				for (int i = 0; i < rsmd.getColumnCount(); i++)
				{
					v.add(rs.getString(i + 1));
				}
				data.add(v);
			}
			for (int i = 0; i < data.size(); i++)// 查询结果有几条记录就循环几次
			{       
                            
                           
				String sql1 = "INSERT INTO `lzhomework`.`ordering_table_supplier` "
						+ "(`订单编号`, `供应商编号`, `职工号`, `下单时间`) " + "VALUES ('"
						+ (Order + i) + "', '" + data.get(i).get(columnNames.indexOf("供应商编号")) + "', '"+ m.get((String)jComboBox1.getSelectedItem())+"', '"
						+ OrderTime + "')";
				System.out.println("sql1" + sql1);
				String sql2 = "SELECT 商品编号,商品库存 FROM lzhomework.product_table where 供应商编号 = '"
						+ data.get(i).get(columnNames.indexOf("供应商编号")) + "'"
								+ "and 商品库存 <= 10";
				try (ResultSet rs2 = stmt.executeQuery(sql2))
				{
					// 取出ResultSet的MetaData
					ResultSetMetaData rsmd2 = rs2.getMetaData();
					Vector<String> columnNames2 = new Vector<>();
					Vector<Vector<String>> data2 = new Vector<>();
					// 把ResultSet的所有列名添加到Vector里
					for (int i2 = 0; i2 < rsmd2.getColumnCount(); i2++)
					{
						columnNames2.add(rsmd2.getColumnName(i2 + 1));
					}
					// 把ResultSet的所有记录添加到Vector里
					while (rs2.next())
					{
						Vector<String> v2 = new Vector<>();
						for (int i2 = 0; i2 < rsmd2.getColumnCount(); i2++)
						{
							v2.add(rs2.getString(i2 + 1));
						}
						data2.add(v2);
					}
					for (int i2 = 0; i2 < data2.size(); i2++)
					{
						try
						{
							String sql22 = "INSERT INTO `lzhomework`.`ordering_table_product` (`订单编号`, `商品编号`, `订货数量`) "
								+ "VALUES ('" + (Order + i) + "', '"
								+ data2.get(i2).get(columnNames2.indexOf("商品编号")) + "', '"
								+ 10 * Integer.parseInt(data2.get(i2).get(columnNames2.indexOf("商品库存")))
								+ "')";
						System.out.println("sql22" + sql22);
						
							stmt.execute(sql22);
						}
						catch (SQLException e)
						{
							// TODO 自动生成的 catch 块
							e.printStackTrace();
							JOptionPane.showMessageDialog(this, "生成失败\n" + e.getMessage());
						}
					}

				}

				catch (Exception e)
				{
					e.printStackTrace();
					System.out.println("ordering_table_product");
				}
				try
				{
					stmt.execute(sql1);
					JOptionPane.showMessageDialog(this, "生成成功！");
				}
				// catch (com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException e) {
				// 	// TODO: handle exception
				// 	JOptionPane.showMessageDialog(this, "订单已经存在！\n");
				// 	System.out.println( e.getMessage());
				// }
				catch (SQLException e)
				{
					// TODO 自动生成的 catch 块
					e.printStackTrace();
					JOptionPane.showMessageDialog(this, "生成失败\n");
					System.out.println( e.getMessage());
				}
			}

		}
		
		catch (Exception e)
		{
			e.printStackTrace();
			System.out.println("creating");
		}
		gettable("select * from lzhomework.ordering_table_supplier");
		
		//连接查询gettable("SELECT lzhomework.ordering_table_product.OrderingNumber,SupplierNumber,EmployeeNumber,OrderingTime,OrderingSubmissionTime,Checked,Suggestion,PassOrNot,ProductNumber,OrderingCount FROM lzhomework.ordering_table_product,lzhomework.ordering_table_supplier where lzhomework.ordering_table_product.OrderingNumber = lzhomework.ordering_table_supplier.OrderingNumber");
	}
    public void information() 
	{
		int select = jTable1.getSelectedRow();
		String sql = "SELECT 订单编号,lzhomework.ordering_table_product.商品编号,商品名称,订货数量 FROM lzhomework.ordering_table_product,lzhomework.product_table\r\n" + 
				"where lzhomework.ordering_table_product.商品编号 = product_table.商品编号 and ordering_table_product.订单编号 = '"+(String) jTable1.getValueAt(select, 0)+"'";
		gettable2(sql);
	}
    public void Update()
	{
		int row = jTable2.getSelectedRow();
		String sql = new String ("SELECT 是否审核 FROM lzhomework.ordering_table_supplier WHERE 订单编号 = '"+(String) jTable2.getValueAt(row, 0)+"'");
		try
		{
			ResultSet rs = stmt.executeQuery(sql);
			rs.next();
			String PassOrNot = rs.getString(1);
			if(PassOrNot.equals("已审核"))
				JOptionPane.showMessageDialog(this, "您不能修改已审核的订单");
			else
			{
				int row2  = jTable2.getSelectedRow();
		int col = jTable2.getSelectedColumn();
		String value = (String) jTable2.getValueAt(row, col);
		if(col==3) 
		{
		String sql2 = new String("UPDATE `lzhomework`.`ordering_table_product` SET `订货数量` = '"+value+"'"
				+ "WHERE `订单编号`='"+jTable2.getValueAt(row, 0)+"' and`商品编号`='"+jTable2.getValueAt(row, 1)+"'" );
		DO(sql2);
		JOptionPane.showMessageDialog(this, "修改成功\n");
                information();
		}
		else 
		{
//		String sql = new String("UPDATE `lzhomework`.`ordering_table_supplier` SET `"+columnNames.get(col)+"` = '"+value+"'"
//				+ "WHERE `订单编号`='"+table.getValueAt(row, 0)+"'" );
//		DO(sql);
		JOptionPane.showMessageDialog(this, "不能修改\n");

		}
		
			}
				
		}
		catch (SQLException e)
		{
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
		
		
                
	}
    public void DO(String sql)
	{
		try
		{
			stmt.execute(sql);
		}
		catch (SQLException e)
		{
			// TODO 自动生成的 catch 块
			e.printStackTrace();
			JOptionPane.showMessageDialog(this, "增加失败\n" + e.getMessage());
		}
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
