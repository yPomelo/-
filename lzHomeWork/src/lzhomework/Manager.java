/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lzhomework;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Enumeration;
import java.util.Properties;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author yyy
 */
public class Manager extends javax.swing.JFrame {

     private final static String PROP_FILE = "mysql.ini";
    private static String driver;
    private static String url;
    private static String user;
    private static String pass;
    private static Connection conn;
    private static Statement stmt;

    static {
        // �������ݿ�
        try {
            Properties connProp = new Properties();
            connProp.load(new FileInputStream(PROP_FILE));
            driver = connProp.getProperty("driver");
            url = connProp.getProperty("url");
            user = connProp.getProperty("user");
            pass = connProp.getProperty("pass");
            Class.forName(driver);
            conn = DriverManager.getConnection(url, user, pass);
            stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * Creates new form Manager
     */
    public Manager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("查看所有订单");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("订单详细信息");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("订单审核");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("订单修改");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("返回");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField1.setText("审核意见");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "通过", "未通过" }));

        jButton6.setText("删除");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton2)
                                .addGap(58, 58, 58)
                                .addComponent(jButton5)
                                .addGap(39, 39, 39)
                                .addComponent(jButton4)
                                .addGap(29, 29, 29)
                                .addComponent(jButton6)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton1)
                        .addGap(186, 186, 186)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         gettable("SELECT 订单编号,lzhomework.ordering_table_supplier.供应商编号,供应商名,lzhomework.ordering_table_supplier.职工号,职工姓名,下单时间,订单审核时间,是否审核,审核意见,是否通过  \r\n" + 
						"FROM lzhomework.ordering_table_supplier,lzhomework.supplier_table,lzhomework.employee_table\r\n" + 
						"where lzhomework.supplier_table.供应商编号 = lzhomework.ordering_table_supplier.供应商编号 \r\n" + 
						"and lzhomework.employee_table.职工号 = lzhomework.ordering_table_supplier.职工号;");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        information();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Update();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
           int[] row = jTable2.getSelectedRows();
				if (row[0] == -1)
				{
					JOptionPane.showMessageDialog(this, "请选择要删除的行!");
				}
				else
				{
					String sql = "DELETE FROM `lzhomework`.`ordering_table_product` WHERE `订单编号`='"+ (String) jTable2.getValueAt(row[0], 0) +"' and`商品编号`='"+ (String) jTable2.getValueAt(row[0], 1) +"'" ;
					System.out.println(sql);
					try
					{
						stmt.executeUpdate(sql);
						JOptionPane.showMessageDialog(this, "删除成功！!");
					}
					catch (SQLException e1)
					{
						// TODO 自动生成的 catch 块

						JOptionPane.showMessageDialog(this, "删除失败!\n" + e1.getMessage());
					}
				}
                                information();
				
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        SimpleDateFormat tempDate2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String OrderTime = tempDate2.format(new java.util.Date());
		String sql = new String("UPDATE `lzhomework`.`ordering_table_supplier` "
				+ "SET `订单审核时间`='"+OrderTime+"', `是否审核`='已审核', `审核意见`='"+jTextField1.getText()+"', "
						+ "`是否通过`='"+(String)jComboBox1.getSelectedItem()+"' WHERE `订单编号`='"+(String)jTable1.getValueAt(row, 0)+"'"  );
		DO(sql);
		JOptionPane.showMessageDialog(this, "审核成功\n");
                String sql22 = new String("select 商品编号 FROM lzhomework.ordering_table_product where lzhomework.ordering_table_product.订单编号 = '"+(String)jTable1.getValueAt(row, 0)+"'");
		
		try
		{
			ResultSet rs = stmt.executeQuery(sql22);
			Vector<String> ProductNumber = new Vector<>(); 
			while(rs.next())
			{
				ProductNumber.add(rs.getString(1));
			}
			for (int i = 0; i < ProductNumber.size(); i++)
			{
				String sql2 = "select 商品库存 from lzhomework.product_table where 商品编号 = '"+ProductNumber.get(i)+"'";
				ResultSet rs2 = stmt.executeQuery(sql2);
				rs2.next();
				String ProductInvertory = rs2.getString(1);
				System.out.println(sql2);
				String sql3 = "SELECT 订货数量 FROM lzhomework.ordering_table_product where 商品编号 = '"+ProductNumber.get(i)+"'";
				ResultSet rs3 = stmt.executeQuery(sql3);
				rs3.next();
				String addProductInvertory = rs3.getString(1);
				System.out.println(sql3);
				String sql4 = "UPDATE `lzhomework`.`product_table` SET `商品库存`='"+(Integer.parseInt(ProductInvertory)+Integer.parseInt(addProductInvertory))+"' WHERE `商品编号`='"+ProductNumber.get(i)+"'";
				DO(sql4);
//				Statement stmt2 = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
//				stmt2.executeUpdate(sql4);
			}
			
		}
		catch (SQLException e)
		{
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
            gettable("SELECT 订单编号,lzhomework.ordering_table_supplier.供应商编号,供应商名,lzhomework.ordering_table_supplier.职工号,职工姓名,下单时间,订单审核时间,是否审核,审核意见,是否通过  \r\n" + 
						"FROM lzhomework.ordering_table_supplier,lzhomework.supplier_table,lzhomework.employee_table\r\n" + 
						"where lzhomework.supplier_table.供应商编号 = lzhomework.ordering_table_supplier.供应商编号 \r\n" + 
						"and lzhomework.employee_table.职工号 = lzhomework.ordering_table_supplier.职工号;");
    }//GEN-LAST:event_jButton3ActionPerformed

   
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Login login = new Login();
				login.main(null);
				this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manager().setVisible(true);
            }
        });
    }
   public void gettable(String sql) {
        try (ResultSet rs = stmt.executeQuery(sql)) {
            // 取出ResultSet的MetaData
            ResultSetMetaData rsmd = rs.getMetaData();
            Vector<String> columnNames = new Vector<>();
            Vector<Vector<String>> data = new Vector<>();
            // 把ResultSet的所有列名添加到Vector里
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                columnNames.add(rsmd.getColumnName(i + 1));
            }
            // 把ResultSet的所有记录添加到Vector里
            while (rs.next()) {
                Vector<String> v = new Vector<>();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    v.add(rs.getString(i + 1));
                }
                data.add(v);
            }
            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            jTable1.setModel(model);
            jTable1.setAutoResizeMode(0);
            jTable1.repaint();
            jTable1.updateUI();
            FitTableColumns(jTable1);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("gettable");
        }
    }
    public void FitTableColumns(JTable myTable) {
        JTableHeader header = myTable.getTableHeader();
        int rowCount = myTable.getRowCount();

        Enumeration columns = myTable.getColumnModel().getColumns();
        while (columns.hasMoreElements()) {
            TableColumn column = (TableColumn) columns.nextElement();
            int col = header.getColumnModel().getColumnIndex(column.getIdentifier());
            int width = (int) myTable.getTableHeader().getDefaultRenderer()
                    .getTableCellRendererComponent(myTable, column.getIdentifier(),
                             false, false, -1, col).getPreferredSize().getWidth();
            for (int row = 0; row < rowCount; row++) {
                int preferedWidth = (int) myTable.getCellRenderer(row, col).getTableCellRendererComponent(myTable,
                        myTable.getValueAt(row, col), false, false, row, col).getPreferredSize().getWidth();
                width = Math.max(width, preferedWidth);
            }
            header.setResizingColumn(column); // 此行很重要
            column.setWidth(width + myTable.getIntercellSpacing().width);
        }
    }
     public void information() 
	{
		int select = jTable1.getSelectedRow();
		String sql = "SELECT 订单编号,lzhomework.ordering_table_product.商品编号,商品名称,订货数量 FROM lzhomework.ordering_table_product,lzhomework.product_table\r\n" + 
				"where lzhomework.ordering_table_product.商品编号 = product_table.商品编号 and ordering_table_product.订单编号 = '"+(String) jTable1.getValueAt(select, 0)+"'";
		gettable2(sql);
	}
      public void Update()
	{
		int row = jTable2.getSelectedRow();
		String sql = new String ("SELECT 是否审核 FROM lzhomework.ordering_table_supplier WHERE 订单编号 = '"+(String) jTable2.getValueAt(row, 0)+"'");
		try
		{
			ResultSet rs = stmt.executeQuery(sql);
			rs.next();
			String PassOrNot = rs.getString(1);
			if(PassOrNot.equals("已审核"))
				JOptionPane.showMessageDialog(this, "您不能修改已审核的订单");
			else
			{
				int row2  = jTable2.getSelectedRow();
		int col = jTable2.getSelectedColumn();
		String value = (String) jTable2.getValueAt(row, col);
		if(col==3) 
		{
		String sql2 = new String("UPDATE `lzhomework`.`ordering_table_product` SET `订货数量` = '"+value+"'"
				+ "WHERE `订单编号`='"+jTable2.getValueAt(row, 0)+"' and`商品编号`='"+jTable2.getValueAt(row, 1)+"'" );
		DO(sql2);
		JOptionPane.showMessageDialog(this, "修改成功\n");
                information();
		}
		else 
		{
//		String sql = new String("UPDATE `lzhomework`.`ordering_table_supplier` SET `"+columnNames.get(col)+"` = '"+value+"'"
//				+ "WHERE `订单编号`='"+table.getValueAt(row, 0)+"'" );
//		DO(sql);
		JOptionPane.showMessageDialog(this, "不能修改\n");

		}
		
			}
				
		}
		catch (SQLException e)
		{
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
		
		
                
	}
      public void DO(String sql)
	{
              System.out.println(sql);
		try
		{
			stmt.execute(sql);
		}
		catch (SQLException e)
		{
			// TODO 自动生成的 catch 块
			e.printStackTrace();
			JOptionPane.showMessageDialog(this, "增加失败\n" + e.getMessage());
		}
	}
      public void gettable2(String sql) {
        try (ResultSet rs = stmt.executeQuery(sql)) {
            // 取出ResultSet的MetaData
            ResultSetMetaData rsmd = rs.getMetaData();
            Vector<String> columnNames = new Vector<>();
            Vector<Vector<String>> data = new Vector<>();
            // 把ResultSet的所有列名添加到Vector里
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                columnNames.add(rsmd.getColumnName(i + 1));
            }
            // 把ResultSet的所有记录添加到Vector里
            while (rs.next()) {
                Vector<String> v = new Vector<>();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    v.add(rs.getString(i + 1));
                }
                data.add(v);
            }
            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            jTable2.setModel(model);
            //jTable2.setAutoResizeMode(0);
            jTable2.repaint();
            jTable2.updateUI();
           // FitTableColumns(jTable2);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("gettable2");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
